{"version":3,"sources":["webpack:///./src/components/FullPageLayout.js","webpack:///./src/components/ExampleA.js","webpack:///./src/pages/example-one.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/src/components/Overlay.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/src/components/CloseIcon.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/src/components/CloseButton.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/src/components/Content.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/src/components/Modal.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/index.js","webpack:///./src/components/PageLayout.js","webpack:////home/greg/dev/my-gatsby-plugins/node_modules/randomcolor/randomColor.js","webpack:///(webpack)/buildin/module.js"],"names":["components_FullPageLayout","Object","styled_base_browser_esm","PageLayout","target","name","styles","cards","map","card","idx","title","background","randomcolor","luminosity","hue","Title","Card","props","Wall","ContentRoot","Content","_ref","core_browser_esm","bg","components_ExampleA","showModal","useContext","gatsby_plugin_modal","btnRefs","useRef","ref","key","style","onClick","Component","ExampleA_Content","sourceRef","current","role","__webpack_exports__","Overlay","isOpen","onDismiss","isClosing","className","children","_useState","useState","alpha","transition","overlay","setOverlay","useEffect","setTimeout","es","alignItems","left","height","position","top","width","zIndex","gatsby-modal-overlay","PropTypes","bool","string","node","func","components_Overlay","CloseIcon","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","CloseButton","border","right","cursor","gatsby-modal-close-button","isRequired","components_CloseButton","closeModal","translateX","translateY","scaleX","scaleY","window","windowWidth","innerWidth","windowHeight","innerHeight","originBounding","getBoundingClientRect","originWidth","originHeight","originX","x","originY","y","content","setContent","_useState2","opacity","innerContent","setInnerContent","margin","outline","padding","transform","transformOrigin","gatsby-modal-content","overflowY","gatsby-modal-inner-content","ModalContext","createContext","DEFAULT_MODAL_STATE","Consumer","modalIsOpen","modalProps","ModalProvider","wrapper","modalState","setModalState","setIsClosing","Provider","value","objectSpread_default","_ref2","_ref3","extends_default","__webpack_require__","d","Modal_ModalProvider","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","gatsby_plugin_modal__WEBPACK_IMPORTED_MODULE_4__","module","randomColor","seed","colorDictionary","defineColor","colorRanges","options","undefined","parseInt","total","i","length","Number","MAX_SAFE_INTEGER","charCodeAt","stringToInteger","TypeError","H","S","B","count","totalColors","colors","push","hueRange","colorHue","isNaN","color","match","HexToHSB","getColorInfo","number","getRealHueRange","randomWithin","step","j","min","max","colorInput","getHueRange","pickHue","saturationRange","getSaturationRange","sMin","sMax","pickSaturation","bMin","lowerBounds","s1","v1","s2","v2","m","b","getMinimumBrightness","bMax","pickBrightness","hsv","format","HSVtoHSL","hsl","hslColor","Math","random","HSVtoRGB","rgb","join","rgbColor","componentToHex","c","hex","toString","HSVtoHex","setFormat","colorName","range","r","floor","rnd","brightnessRange","h","s","v","h_i","f","p","q","t","g","result","replace","red","substr","green","blue","cMax","delta","saturation","k","round","factory","exports","webpackPolyfill","deprecate","paths","defineProperty","enumerable","get","l"],"mappings":"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","file":"component---src-pages-example-one-js-c2af26f186cc17fe59c0.js","sourcesContent":["import styled from \"@emotion/styled\"\n\nimport PageLayout from \"./PageLayout\"\n\nconst FullPageLayout = styled(PageLayout)`\n  max-width: none;\n  margin: 0;\n  padding: 0;\n`\n\nexport default FullPageLayout\n","import React, { useContext, useRef } from \"react\"\n\nimport styled from \"@emotion/styled\"\nimport { ModalContext } from \"gatsby-plugin-modal\"\nimport randomcolor from \"randomcolor\"\n\nlet cards = [\n  \"There’s Big Money In MODAL\",\n  \"5 Problems Everyone Has With MODAL – How To Solved Them\",\n  \"Avoid The Top 10 MODAL Mistakes\",\n  \"Why MODAL Is The Only Skill You Really Need\",\n  \"The Secrets To MODAL\",\n  \"11 Methods Of MODAL Domination\",\n  \"Learn To (Do) MODAL Like A Professional\",\n  \"5 Incredibly Useful MODAL Tips For Small Businesses\",\n  \"5 Brilliant Ways To Use MODAL\",\n  \"OMG! The Best MODAL Ever!\",\n  \"The MODAL Mystery Revealed\",\n  \"Even more about...\",\n]\n\ncards = cards.map((card, idx) => ({\n  title: card,\n  background:\n    idx === cards.length - 1\n      ? \"#999\"\n      : randomcolor({ luminosity: \"light\", hue: \"purple\" }),\n}))\n\nconst Title = styled(`h3`)`\n  font-size: 1.5rem;\n  margin: 0;\n  padding-bottom: 3.5rem;\n  letter-spacing: -0.02em;\n\n  @media only screen and (min-width: 800px) {\n    font-size: 1.8rem;\n    padding-bottom: 2.5rem;\n  }\n`\n\nconst Card = styled(`div`)`\n  background: ${props => (props.background ? props.background : \"#666\")};\n  padding: 1.5rem 2rem;\n  position: relative;\n  flex: 1 1 100%;\n  min-height: 33%;\n\n  @media only screen and (min-width: 800px) {\n    flex-basis: 30%;\n  }\n\n  button {\n    position: absolute;\n    bottom: 1.5rem;\n    right: 1.5rem;\n    background: transparent;\n    font-size: 0.9rem;\n    padding: 0.6rem 1.2rem;\n    margin: 0;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n    border-radius: 0.2rem;\n    cursor: pointer;\n    transition: background 0.5s;\n    background: rgba(255, 255, 255, 0.25);\n\n    :hover {\n      background: rgba(255, 255, 255, 0.5);\n    }\n\n    @media only screen and (min-width: 800px) {\n      font-size: 1rem;\n      padding: 0.75rem 1.5rem;\n    }\n  }\n\n  &:last-of-type {\n    background: #444;\n    color: white;\n    cursor: pointer;\n    transition: background 0.5s;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    ${Title} {\n      padding: 0;\n    }\n\n    :hover {\n      background: #333;\n    }\n  }\n`\n\nconst Wall = styled(`div`)`\n  display: flex;\n  flex-wrap: wrap;\n  min-height: 100vh;\n`\n\nconst ContentRoot = styled(`div`)`\n  width: 100%;\n  height: 100%;\n  padding: 2rem;\n  overflow-y: auto;\n\n  h1 {\n    font-size: 2rem;\n    padding-right: 6rem;\n    margin: 0 0 2rem 0;\n  }\n\n  p {\n    font-size: 1rem;\n    line-height: 1.6;\n  }\n\n  @media only screen and (min-width: 800px) {\n    padding: 3rem;\n    padding-right: 20%;\n\n    h1 {\n      font-size: 3rem;\n      margin: 0 0 2rem 0;\n    }\n\n    p {\n      font-size: 1.1rem;\n      line-height: 1.8;\n    }\n  }\n`\n\nexport const Content = ({ title, background }) => {\n  return (\n    <ContentRoot bg={background}>\n      <h1>{title}</h1>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\n        luctus interdum libero vehicula eleifend. Aliquam quis justo quam. Donec\n        hendrerit est dolor, eget interdum leo sodales nec. Pellentesque\n        volutpat at quam vel condimentum. Donec quis iaculis enim. Sed viverra\n        egestas tortor ac lobortis. Lorem ipsum dolor sit amet, consectetur\n        adipiscing elit. Pellentesque habitant morbi tristique senectus et netus\n        et malesuada fames ac turpis egestas. Praesent id mauris nec ante rutrum\n        efficitur. In purus quam, accumsan eget est non, rutrum viverra nisi.\n        Duis at ipsum id felis pretium lacinia sed sit amet eros. Morbi eget\n        auctor libero, eget semper magna.\n      </p>\n      <p>\n        Curabitur vitae dictum lorem. Nam dolor libero, hendrerit at euismod\n        sed, maximus viverra odio. Proin non vulputate ante. Mauris arcu metus,\n        congue sit amet placerat id, rutrum at ante. Maecenas ac metus gravida,\n        rutrum urna vel, rutrum mauris. Nunc tincidunt blandit eros, sit amet\n        euismod tellus. Duis aliquam nulla non erat mattis, ut tincidunt diam\n        luctus.\n      </p>\n      <p>\n        Proin fringilla tempor lacus, vel blandit neque venenatis at. Sed eget\n        tincidunt nisi, a gravida odio. Aliquam ac magna dapibus nunc faucibus\n        lacinia. Donec tincidunt efficitur viverra. Fusce et tempus elit,\n        consectetur tristique dui. Cras cursus venenatis consectetur. Curabitur\n        sit amet felis vel justo facilisis interdum non vitae diam. Nullam\n        semper maximus massa, sit amet mattis nulla rhoncus nec.\n      </p>\n      <p>\n        Curabitur vitae dictum lorem. Nam dolor libero, hendrerit at euismod\n        sed, maximus viverra odio. Proin non vulputate ante. Mauris arcu metus,\n        congue sit amet placerat id, rutrum at ante. Maecenas ac metus gravida,\n        rutrum urna vel, rutrum mauris. Nunc tincidunt blandit eros, sit amet\n        euismod tellus. Duis aliquam nulla non erat mattis, ut tincidunt diam\n        luctus.\n      </p>\n      <p>\n        Proin fringilla tempor lacus, vel blandit neque venenatis at. Sed eget\n        tincidunt nisi, a gravida odio. Aliquam ac magna dapibus nunc faucibus\n        lacinia. Donec tincidunt efficitur viverra.\n      </p>\n    </ContentRoot>\n  )\n}\n\nconst ExampleA = () => {\n  const { showModal } = useContext(ModalContext)\n  const btnRefs = []\n\n  cards.map((card, idx) => (btnRefs[idx] = useRef(null)))\n\n  return (\n    <Wall>\n      {cards.map((card, idx) =>\n        idx !== cards.length - 1 ? (\n          <Card\n            ref={btnRefs[idx]}\n            key={idx}\n            background={card.background}\n            styles={card.style}\n          >\n            <Title>{card.title}</Title>\n            <button\n              onClick={() => {\n                showModal({\n                  Component: () => <Content title={card.title} />,\n                  props: {\n                    sourceRef: btnRefs[idx].current,\n                    background: card.background,\n                    title: card.title,\n                  },\n                })\n              }}\n            >\n              Read more\n            </button>\n          </Card>\n        ) : (\n          <Card\n            ref={btnRefs[idx]}\n            key={idx}\n            background={card.background}\n            role={`button`}\n            onClick={() => {\n              showModal({\n                Component: Content,\n                props: {\n                  sourceRef: btnRefs[idx].current,\n                  background: card.background,\n                  title: card.title,\n                },\n              })\n            }}\n          >\n            <Title>{card.title}</Title>\n          </Card>\n        )\n      )}\n    </Wall>\n  )\n}\n\nexport default ExampleA\n","import React from \"react\"\n\nimport FullPageLayout from \"../components/FullPageLayout\"\nimport ExampleA from \"../components/ExampleA\"\n\nconst ExamplePageOne = () => {\n  return (\n    <FullPageLayout>\n      <ExampleA />\n    </FullPageLayout>\n  )\n}\n\nexport default ExamplePageOne\n","import React, { useState, useEffect } from 'react';\nimport { DialogOverlay } from '@reach/dialog';\nimport PropTypes from 'prop-types';\n\nconst Overlay = ({ isOpen, onDismiss, isClosing, className, children }) => {\n  const [overlay, setOverlay] = useState({\n    alpha: 0,\n    transition: 300\n  });\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      setTimeout(\n        () =>\n          setOverlay({\n            alpha: 0.25,\n            transition: 500\n          }),\n        0\n      );\n    }\n\n    if (isOpen && isClosing) {\n      setOverlay({\n        alpha: 0,\n        transition: 300\n      });\n    }\n  }, [isOpen, isClosing]);\n\n  return (\n    <DialogOverlay\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      style={{\n        alignItems: 'center',\n        background: `rgba(0, 0, 0, ${overlay.alpha})`,\n        left: 0,\n        height: '100vh',\n        position: 'fixed',\n        top: 0,\n        transition: 'background 500ms',\n        width: '100%',\n        zIndex: 1000\n      }}\n      className={className}\n      gatsby-modal-overlay=\"true\"\n    >\n      {children}\n    </DialogOverlay>\n  );\n};\n\nOverlay.propTypes = {\n  isOpen: PropTypes.bool,\n  isClosing: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onDismiss: PropTypes.func\n};\n\nexport default Overlay;\n","// SVG by Feather - https://feathericons.com/\n// License: MIT https://github.com/feathericons/feather/blob/master/LICENSE\n\nimport React from 'react';\n\nexport default ({ style }) => (\n  <svg\n    style={style}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n  </svg>\n);\n","import React from 'react';\nimport CloseIcon from './CloseIcon';\nimport PropTypes from 'prop-types';\n\nconst CloseButton = ({ onClick, className, children }) => (\n  <button\n    onClick={onClick}\n    style={{\n      position: 'fixed',\n      border: 0,\n      top: '20px',\n      right: '30px',\n      width: '60px',\n      height: '60px',\n      background: 'none',\n      cursor: 'pointer',\n      zIndex: 1\n    }}\n    className={className}\n    gatsby-modal-close-button=\"true\"\n  >\n    {!children ? (\n      <CloseIcon\n        style={{\n          stroke: 'white',\n          width: '60%',\n          height: '60%'\n        }}\n      />\n    ) : (\n      children\n    )}\n  </button>\n);\n\nCloseButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nexport default CloseButton;\n","import React, { useState, useEffect } from 'react';\nimport { DialogContent } from '@reach/dialog';\n\nimport CloseButton from './CloseButton';\n\nexport default ({\n  children,\n  isOpen,\n  closeModal,\n  isClosing,\n  sourceRef,\n  background,\n  className\n}) => {\n  let translateX = 0;\n  let translateY = 0;\n  let scaleX = 0;\n  let scaleY = 0;\n\n  if (typeof window !== `undefined`) {\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n\n    const originBounding = sourceRef.getBoundingClientRect();\n    const originWidth = originBounding.width;\n    const originHeight = originBounding.height;\n\n    const originX = originBounding.x;\n    const originY = originBounding.y;\n    scaleX = originWidth / windowWidth;\n    scaleY = originHeight / windowHeight;\n\n    translateX = `${originX}px`;\n    translateY = `${originY}px`;\n  }\n\n  const [content, setContent] = useState({\n    translateX,\n    translateY,\n    scaleX,\n    scaleY,\n    transition: 250\n  });\n\n  const [innerContent, setInnerContent] = useState({\n    opacity: 0,\n    transition: 50\n  });\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      setTimeout(() => {\n        setContent({\n          translateX: 0,\n          translateY: 0,\n          scaleX: 1,\n          scaleY: 1,\n          transition: 500\n        });\n      }, 0);\n\n      setTimeout(() => {\n        setInnerContent({\n          opacity: 1,\n          transition: 500\n        });\n      }, 200);\n    }\n\n    if (isClosing) {\n      setInnerContent({\n        opacity: 0,\n        transition: 50\n      });\n\n      setContent({\n        translateX,\n        translateY,\n        scaleX,\n        scaleY,\n        transition: 250\n      });\n    }\n  }, [isOpen, isClosing]);\n\n  return (\n    <DialogContent\n      style={{\n        background: background ? background : '#666',\n        height: '100vh',\n        left: 0,\n        margin: 0,\n        outline: 'none',\n        padding: 0,\n        position: 'absolute',\n        top: 0,\n        transform: `translate3D(${content.translateX}, ${\n          content.translateY\n        }, 0) scale(${content.scaleX}, ${content.scaleY})`,\n        transition: `transform ${content.transition}ms`,\n        transformOrigin: 'top left',\n        width: '100%'\n      }}\n      gatsby-modal-content=\"true\"\n      className={className}\n    >\n      <div\n        style={{\n          height: '100%',\n          opacity: innerContent.opacity,\n          overflowY: `auto`,\n          position: 'relative',\n          transition: `opacity ${innerContent.transition}ms`,\n          width: '100%'\n        }}\n        gatsby-modal-inner-content=\"true\"\n      >\n        <CloseButton onClick={closeModal} />\n        {children}\n      </div>\n    </DialogContent>\n  );\n};\n","import React, { useState, createContext } from 'react';\n\nimport Overlay from './Overlay';\nimport Content from './Content';\n\nexport const ModalContext = createContext();\nexport const ModalConsumer = ModalContext.Consumer;\n\nconst DEFAULT_MODAL_STATE = {\n  modalIsOpen: false,\n  isClosing: false,\n  Component: () => null,\n  modalProps: {}\n};\n\nexport const ModalProvider = ({ children, wrapper }) => {\n  const [modalState, setModalState] = useState(DEFAULT_MODAL_STATE);\n  const [isClosing, setIsClosing] = useState(false);\n\n  const showModal = ({ Component, props }) => {\n    setModalState({\n      modalIsOpen: true,\n      Component,\n      modalProps: {\n        ...props,\n        isOpen: true\n      }\n    });\n  };\n\n  const closeModal = () => {\n    setIsClosing(true);\n\n    setTimeout(() => {\n      setModalState({\n        Component: null,\n        modalIsOpen: false,\n        modalProps: {}\n      });\n      setIsClosing(false);\n    }, 300);\n  };\n\n  return (\n    <ModalContext.Provider\n      value={{\n        ...modalState,\n        showModal,\n        closeModal\n      }}\n    >\n      {children}\n      <ModalContext.Consumer>\n        {({ modalIsOpen, Component, closeModal, modalProps }) => {\n          const { sourceRef, background } = modalProps;\n\n          return (\n            <Overlay\n              isOpen={modalIsOpen}\n              isClosing={isClosing}\n              onDismiss={closeModal}\n            >\n              <Content\n                isOpen={modalIsOpen}\n                closeModal={closeModal}\n                isClosing={isClosing}\n                sourceRef={sourceRef}\n                background={background}\n              >\n                {Component && (\n                  <Component closeModal={closeModal} {...modalProps} />\n                )}\n              </Content>\n            </Overlay>\n          );\n        }}\n      </ModalContext.Consumer>\n    </ModalContext.Provider>\n  );\n};\n","export {\n  ModalProvider,\n  ModalContext,\n  ModalConsumer\n} from './src/components/Modal';\n","import React, { Fragment } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Global, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport { ModalProvider } from \"gatsby-plugin-modal\"\n\nconst Content = styled(`div`)`\n  margin: 0 auto;\n  max-width: 50rem;\n  padding: 5rem 0;\n\n  h1 {\n    font-size: 3.6rem;\n    margin: 0;\n    margin-bottom: 5rem;\n    letter-spacing: -0.03em;\n  }\n\n  h2 {\n    font-size: 2rem;\n    margin: 5rem 0 1.5rem;\n  }\n\n  p {\n    font-size: 1.1rem;\n    line-height: 1.8;\n    margin-bottom: 3rem;\n  }\n\n  a > img {\n    border: 1px solid #ddd;\n  }\n\n  .gatsby-highlight {\n    max-height: 20rem;\n    overflow-y: auto;\n    border-radius: 0.2rem;\n    margin: 3rem 0;\n\n    pre {\n      margin: 0;\n      padding: 1rem 1.5rem;\n    }\n\n    /* width */\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n\n    /* Track */\n    &::-webkit-scrollbar-track {\n      background: #222;\n    }\n\n    /* Handle */\n    &::-webkit-scrollbar-thumb {\n      background: #666;\n    }\n\n    /* Handle on hover */\n    &::-webkit-scrollbar-thumb:hover {\n      background: #999;\n    }\n  }\n`\n\nconst PageLayout = ({ children, className }) => (\n  <ModalProvider>\n    <Global\n      styles={css`\n        body {\n          margin: 0;\n          box-sizing: border-box;\n          font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n            Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\",\n            \"Helvetica Neue\", sans-serif;\n        }\n\n        body * {\n          box-sizing: inherit;\n        }\n      `}\n    />\n\n    <Content className={className}>{children}</Content>\n  </ModalProvider>\n)\n\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default PageLayout\n","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  // check if a range is taken\n  var colorRanges = [];\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n      // Value false at index i means the range i is not taken yet.\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false)\n        }\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue)\n\n      var hue = randomWithin(hueRange)\n\n      //Each of colorRanges.length ranges has a length equal approximatelly one step\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length\n\n      var j = parseInt((hue - hueRange[0]) / step)\n\n      //Check if the range j is taken\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length\n      }\n      else {\n        colorRanges[j] = true\n           }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n\n      hueRange = [min, max]\n\n      hue = randomWithin(hueRange)\n\n      if (hue < 0) {hue = 360 + hue;}\n      return hue\n    }\n    else {\n      var hueRange = getHueRange(options.hue)\n\n      hue = randomWithin(hueRange);\n      // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895\n      var r=Math.random()\n      r += golden_ratio\n      r %= 1\n      return Math.floor(range[0] + r*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n}\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  // get The range of given hue when options.count!=0\n  function getRealHueRange(colorHue)\n  { if (!isNaN(colorHue)) {\n    var number = parseInt(colorHue);\n\n    if (number < 360 && number > 0) {\n      return getColorInfo(colorHue).hueRange\n    }\n  }\n    else if (typeof colorHue === 'string') {\n\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange\n       }\n    } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0]\n        return getColorInfo(hue).hueRange\n    }\n  }\n\n    return [0,360]\n}\n  return randomColor;\n}));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}