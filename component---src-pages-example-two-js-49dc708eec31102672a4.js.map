{"version":3,"sources":["webpack:///./src/components/ExampleB.js","webpack:///./src/pages/example-two.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/src/components/Overlay.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/src/components/CloseIcon.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/src/components/CloseButton.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/src/components/Content.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/src/components/Modal.js","webpack:////home/greg/dev/my-gatsby-plugins/packages/gatsby-plugin-modal/index.js","webpack:///./src/components/PageLayout.js"],"names":["Note","Object","styled_base_browser_esm","target","name","styles","ContentRoot","Content","props","core_browser_esm","title","components_ExampleB","showModal","useContext","gatsby_plugin_modal","noteRefs","useRef","react","ref","onClick","Component","ExampleB_Content","sourceRef","current","background","__webpack_exports__","PageLayout","Overlay","_ref","isOpen","onDismiss","isClosing","className","children","_useState","useState","alpha","transition","overlay","setOverlay","useEffect","setTimeout","es","style","alignItems","left","height","position","top","width","zIndex","gatsby-modal-overlay","PropTypes","bool","string","node","func","components_Overlay","CloseIcon","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","CloseButton","border","right","cursor","gatsby-modal-close-button","isRequired","components_CloseButton","closeModal","translateX","translateY","scaleX","scaleY","window","windowWidth","innerWidth","windowHeight","innerHeight","originBounding","getBoundingClientRect","originWidth","originHeight","originX","x","originY","y","content","setContent","_useState2","opacity","innerContent","setInnerContent","margin","outline","padding","transform","transformOrigin","gatsby-modal-content","overflowY","gatsby-modal-inner-content","ModalContext","createContext","DEFAULT_MODAL_STATE","Consumer","modalIsOpen","modalProps","ModalProvider","wrapper","modalState","setModalState","setIsClosing","Provider","value","objectSpread_default","_ref2","_ref3","extends_default","__webpack_require__","d","Modal_ModalProvider","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","gatsby_plugin_modal__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"component---src-pages-example-two-js-49dc708eec31102672a4.js","sourcesContent":["import React, { useContext, useRef, Fragment } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { ModalContext } from \"gatsby-plugin-modal\"\n\nconst Note = styled(`div`)`\n  width: 12rem;\n  float: right;\n  background: purple;\n  color: white;\n  font-size: 1.4rem;\n  font-weight: bold;\n  padding: 2.5rem;\n  margin: 1rem 0 1rem 2rem;\n`\nconst ContentRoot = styled(`div`)`\n  width: 100%;\n  height: 100%;\n  padding: 2rem;\n  color: white;\n\n  h1 {\n    font-size: 2rem;\n    padding-right: 6rem;\n    margin: 0 0 2rem 0;\n  }\n\n  p {\n    font-size: 1rem;\n    line-height: 1.6;\n  }\n\n  @media only screen and (min-width: 800px) {\n    padding: 3rem;\n    padding-right: 20%;\n\n    h1 {\n      font-size: 3rem;\n      margin: 0 0 2rem 0;\n    }\n\n    p {\n      font-size: 1.1rem;\n      line-height: 1.8;\n    }\n  }\n`\n\nexport const Content = props => {\n  return (\n    <ContentRoot>\n      <h1>{props.title}</h1>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\n        luctus interdum libero vehicula eleifend. Aliquam quis justo quam. Donec\n        hendrerit est dolor, eget interdum leo sodales nec. Pellentesque\n        volutpat at quam vel condimentum. Donec quis iaculis enim. Sed viverra\n        egestas tortor ac lobortis. Lorem ipsum dolor sit amet, consectetur\n        adipiscing elit. Pellentesque habitant morbi tristique senectus et netus\n        et malesuada fames ac turpis egestas. Praesent id mauris nec ante rutrum\n        efficitur. In purus quam, accumsan eget est non, rutrum viverra nisi.\n        Duis at ipsum id felis pretium lacinia sed sit amet eros. Morbi eget\n        auctor libero, eget semper magna.\n      </p>\n      <p>\n        Curabitur vitae dictum lorem. Nam dolor libero, hendrerit at euismod\n        sed, maximus viverra odio. Proin non vulputate ante. Mauris arcu metus,\n        congue sit amet placerat id, rutrum at ante. Maecenas ac metus gravida,\n        rutrum urna vel, rutrum mauris. Nunc tincidunt blandit eros, sit amet\n        euismod tellus. Duis aliquam nulla non erat mattis, ut tincidunt diam\n        luctus.\n      </p>\n      <p>\n        Proin fringilla tempor lacus, vel blandit neque venenatis at. Sed eget\n        tincidunt nisi, a gravida odio. Aliquam ac magna dapibus nunc faucibus\n        lacinia. Donec tincidunt efficitur viverra. Fusce et tempus elit,\n        consectetur tristique dui. Cras cursus venenatis consectetur. Curabitur\n        sit amet felis vel justo facilisis interdum non vitae diam. Nullam\n        semper maximus massa, sit amet mattis nulla rhoncus nec.\n      </p>\n      <p>\n        Curabitur vitae dictum lorem. Nam dolor libero, hendrerit at euismod\n        sed, maximus viverra odio. Proin non vulputate ante. Mauris arcu metus,\n        congue sit amet placerat id, rutrum at ante. Maecenas ac metus gravida,\n        rutrum urna vel, rutrum mauris. Nunc tincidunt blandit eros, sit amet\n        euismod tellus. Duis aliquam nulla non erat mattis, ut tincidunt diam\n        luctus.\n      </p>\n      <p>\n        Proin fringilla tempor lacus, vel blandit neque venenatis at. Sed eget\n        tincidunt nisi, a gravida odio. Aliquam ac magna dapibus nunc faucibus\n        lacinia. Donec tincidunt efficitur viverra.\n      </p>\n    </ContentRoot>\n  )\n}\n\nconst ExampleB = () => {\n  const { showModal } = useContext(ModalContext)\n  const noteRefs = useRef(null)\n\n  return (\n    <Fragment>\n      <h1>5 Incredibly Useful MODAL Tips For Small Businesses</h1>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\n        luctus interdum libero vehicula eleifend. Aliquam quis justo quam. Donec\n        hendrerit est dolor, eget interdum leo sodales nec. Pellentesque\n        volutpat at quam vel condimentum. Donec quis iaculis enim. Sed viverra\n        egestas tortor ac lobortis. Lorem ipsum dolor sit amet, consectetur\n        adipiscing elit. Pellentesque habitant morbi tristique senectus et netus\n        et malesuada fames ac turpis egestas. Praesent id mauris nec ante rutrum\n        efficitur. In purus quam, accumsan eget est non, rutrum viverra nisi.\n        Duis at ipsum id felis pretium lacinia sed sit amet eros. Morbi eget\n        auctor libero, eget semper magna.\n      </p>\n      <Note\n        ref={noteRefs}\n        onClick={() => {\n          showModal({\n            Component: Content,\n            props: {\n              sourceRef: noteRefs.current,\n              background: \"purple\",\n              title: \"There’s Big Money In MODAL\",\n            },\n          })\n        }}\n      >\n        There’s Big Money In MODAL\n      </Note>\n      <p>\n        Curabitur vitae dictum lorem. Nam dolor libero, hendrerit at euismod\n        sed, maximus viverra odio. Proin non vulputate ante. Mauris arcu metus,\n        congue sit amet placerat id, rutrum at ante. Maecenas ac metus gravida,\n        rutrum urna vel, rutrum mauris. Nunc tincidunt blandit eros, sit amet\n        euismod tellus. Duis aliquam nulla non erat mattis, ut tincidunt diam\n        luctus. Proin fringilla tempor lacus, vel blandit neque venenatis at.\n        Sed eget tincidunt nisi, a gravida odio. Aliquam ac magna dapibus nunc\n        faucibus lacinia. Donec tincidunt efficitur viverra.\n      </p>\n\n      <p>\n        Fusce et tempus elit, consectetur tristique dui. Cras cursus venenatis\n        consectetur. Curabitur sit amet felis vel justo facilisis interdum non\n        vitae diam. Nullam semper maximus massa, sit amet mattis nulla rhoncus\n        nec.\n      </p>\n      <p>\n        Curabitur vitae dictum lorem. Nam dolor libero, hendrerit at euismod\n        sed, maximus viverra odio. Proin non vulputate ante. Mauris arcu metus,\n        congue sit amet placerat id, rutrum at ante. Maecenas ac metus gravida,\n        rutrum urna vel, rutrum mauris. Nunc tincidunt blandit eros, sit amet\n        euismod tellus. Duis aliquam nulla non erat mattis, ut tincidunt diam\n        luctus. Proin fringilla tempor lacus, vel blandit neque venenatis at.\n        Sed eget tincidunt nisi, a gravida odio. Aliquam ac magna dapibus nunc\n        faucibus lacinia. Donec tincidunt efficitur viverra.\n      </p>\n    </Fragment>\n  )\n}\n\nexport default ExampleB\n","import React from \"react\"\n\nimport PageLayout from \"../components/PageLayout\"\nimport ExampleB from \"../components/ExampleB\"\n\nconst ExamplePageTwo = () => {\n  return (\n    <PageLayout>\n      <ExampleB />\n    </PageLayout>\n  )\n}\n\nexport default ExamplePageTwo\n","import React, { useState, useEffect } from 'react';\nimport { DialogOverlay } from '@reach/dialog';\nimport PropTypes from 'prop-types';\n\nconst Overlay = ({ isOpen, onDismiss, isClosing, className, children }) => {\n  const [overlay, setOverlay] = useState({\n    alpha: 0,\n    transition: 300\n  });\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      setTimeout(\n        () =>\n          setOverlay({\n            alpha: 0.25,\n            transition: 500\n          }),\n        0\n      );\n    }\n\n    if (isOpen && isClosing) {\n      setOverlay({\n        alpha: 0,\n        transition: 300\n      });\n    }\n  }, [isOpen, isClosing]);\n\n  return (\n    <DialogOverlay\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      style={{\n        alignItems: 'center',\n        background: `rgba(0, 0, 0, ${overlay.alpha})`,\n        left: 0,\n        height: '100vh',\n        position: 'fixed',\n        top: 0,\n        transition: 'background 500ms',\n        width: '100%',\n        zIndex: 1000\n      }}\n      className={className}\n      gatsby-modal-overlay=\"true\"\n    >\n      {children}\n    </DialogOverlay>\n  );\n};\n\nOverlay.propTypes = {\n  isOpen: PropTypes.bool,\n  isClosing: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onDismiss: PropTypes.func\n};\n\nexport default Overlay;\n","// SVG by Feather - https://feathericons.com/\n// License: MIT https://github.com/feathericons/feather/blob/master/LICENSE\n\nimport React from 'react';\n\nexport default ({ style }) => (\n  <svg\n    style={style}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n  </svg>\n);\n","import React from 'react';\nimport CloseIcon from './CloseIcon';\nimport PropTypes from 'prop-types';\n\nconst CloseButton = ({ onClick, className, children }) => (\n  <button\n    onClick={onClick}\n    style={{\n      position: 'fixed',\n      border: 0,\n      top: '20px',\n      right: '30px',\n      width: '60px',\n      height: '60px',\n      background: 'none',\n      cursor: 'pointer',\n      zIndex: 1\n    }}\n    className={className}\n    gatsby-modal-close-button=\"true\"\n  >\n    {!children ? (\n      <CloseIcon\n        style={{\n          stroke: 'white',\n          width: '60%',\n          height: '60%'\n        }}\n      />\n    ) : (\n      children\n    )}\n  </button>\n);\n\nCloseButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nexport default CloseButton;\n","import React, { useState, useEffect } from 'react';\nimport { DialogContent } from '@reach/dialog';\n\nimport CloseButton from './CloseButton';\n\nexport default ({\n  children,\n  isOpen,\n  closeModal,\n  isClosing,\n  sourceRef,\n  background,\n  className\n}) => {\n  let translateX = 0;\n  let translateY = 0;\n  let scaleX = 0;\n  let scaleY = 0;\n\n  if (typeof window !== `undefined`) {\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n\n    const originBounding = sourceRef.getBoundingClientRect();\n    const originWidth = originBounding.width;\n    const originHeight = originBounding.height;\n\n    const originX = originBounding.x;\n    const originY = originBounding.y;\n    scaleX = originWidth / windowWidth;\n    scaleY = originHeight / windowHeight;\n\n    translateX = `${originX}px`;\n    translateY = `${originY}px`;\n  }\n\n  const [content, setContent] = useState({\n    translateX,\n    translateY,\n    scaleX,\n    scaleY,\n    transition: 250\n  });\n\n  const [innerContent, setInnerContent] = useState({\n    opacity: 0,\n    transition: 50\n  });\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      setTimeout(() => {\n        setContent({\n          translateX: 0,\n          translateY: 0,\n          scaleX: 1,\n          scaleY: 1,\n          transition: 500\n        });\n      }, 0);\n\n      setTimeout(() => {\n        setInnerContent({\n          opacity: 1,\n          transition: 500\n        });\n      }, 200);\n    }\n\n    if (isClosing) {\n      setInnerContent({\n        opacity: 0,\n        transition: 50\n      });\n\n      setContent({\n        translateX,\n        translateY,\n        scaleX,\n        scaleY,\n        transition: 250\n      });\n    }\n  }, [isOpen, isClosing]);\n\n  return (\n    <DialogContent\n      style={{\n        background: background ? background : '#666',\n        height: '100vh',\n        left: 0,\n        margin: 0,\n        outline: 'none',\n        padding: 0,\n        position: 'absolute',\n        top: 0,\n        transform: `translate3D(${content.translateX}, ${\n          content.translateY\n        }, 0) scale(${content.scaleX}, ${content.scaleY})`,\n        transition: `transform ${content.transition}ms`,\n        transformOrigin: 'top left',\n        width: '100%'\n      }}\n      gatsby-modal-content=\"true\"\n      className={className}\n    >\n      <div\n        style={{\n          height: '100%',\n          opacity: innerContent.opacity,\n          overflowY: `auto`,\n          position: 'relative',\n          transition: `opacity ${innerContent.transition}ms`,\n          width: '100%'\n        }}\n        gatsby-modal-inner-content=\"true\"\n      >\n        <CloseButton onClick={closeModal} />\n        {children}\n      </div>\n    </DialogContent>\n  );\n};\n","import React, { useState, createContext } from 'react';\n\nimport Overlay from './Overlay';\nimport Content from './Content';\n\nexport const ModalContext = createContext();\nexport const ModalConsumer = ModalContext.Consumer;\n\nconst DEFAULT_MODAL_STATE = {\n  modalIsOpen: false,\n  isClosing: false,\n  Component: () => null,\n  modalProps: {}\n};\n\nexport const ModalProvider = ({ children, wrapper }) => {\n  const [modalState, setModalState] = useState(DEFAULT_MODAL_STATE);\n  const [isClosing, setIsClosing] = useState(false);\n\n  const showModal = ({ Component, props }) => {\n    setModalState({\n      modalIsOpen: true,\n      Component,\n      modalProps: {\n        ...props,\n        isOpen: true\n      }\n    });\n  };\n\n  const closeModal = () => {\n    setIsClosing(true);\n\n    setTimeout(() => {\n      setModalState({\n        Component: null,\n        modalIsOpen: false,\n        modalProps: {}\n      });\n      setIsClosing(false);\n    }, 300);\n  };\n\n  return (\n    <ModalContext.Provider\n      value={{\n        ...modalState,\n        showModal,\n        closeModal\n      }}\n    >\n      {children}\n      <ModalContext.Consumer>\n        {({ modalIsOpen, Component, closeModal, modalProps }) => {\n          const { sourceRef, background } = modalProps;\n\n          return (\n            <Overlay\n              isOpen={modalIsOpen}\n              isClosing={isClosing}\n              onDismiss={closeModal}\n            >\n              <Content\n                isOpen={modalIsOpen}\n                closeModal={closeModal}\n                isClosing={isClosing}\n                sourceRef={sourceRef}\n                background={background}\n              >\n                {Component && (\n                  <Component closeModal={closeModal} {...modalProps} />\n                )}\n              </Content>\n            </Overlay>\n          );\n        }}\n      </ModalContext.Consumer>\n    </ModalContext.Provider>\n  );\n};\n","export {\n  ModalProvider,\n  ModalContext,\n  ModalConsumer\n} from './src/components/Modal';\n","import React, { Fragment } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Global, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport { ModalProvider } from \"gatsby-plugin-modal\"\n\nconst Content = styled(`div`)`\n  margin: 0 auto;\n  max-width: 50rem;\n  padding: 5rem 0;\n\n  h1 {\n    font-size: 3.6rem;\n    margin: 0;\n    margin-bottom: 5rem;\n    letter-spacing: -0.03em;\n  }\n\n  h2 {\n    font-size: 2rem;\n    margin: 5rem 0 1.5rem;\n  }\n\n  p {\n    font-size: 1.1rem;\n    line-height: 1.8;\n    margin-bottom: 3rem;\n  }\n\n  a > img {\n    border: 1px solid #ddd;\n  }\n\n  .gatsby-highlight {\n    max-height: 20rem;\n    overflow-y: auto;\n    border-radius: 0.2rem;\n    margin: 3rem 0;\n\n    pre {\n      margin: 0;\n      padding: 1rem 1.5rem;\n    }\n\n    /* width */\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n\n    /* Track */\n    &::-webkit-scrollbar-track {\n      background: #222;\n    }\n\n    /* Handle */\n    &::-webkit-scrollbar-thumb {\n      background: #666;\n    }\n\n    /* Handle on hover */\n    &::-webkit-scrollbar-thumb:hover {\n      background: #999;\n    }\n  }\n`\n\nconst PageLayout = ({ children, className }) => (\n  <ModalProvider>\n    <Global\n      styles={css`\n        body {\n          margin: 0;\n          box-sizing: border-box;\n          font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n            Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\",\n            \"Helvetica Neue\", sans-serif;\n        }\n\n        body * {\n          box-sizing: inherit;\n        }\n      `}\n    />\n\n    <Content className={className}>{children}</Content>\n  </ModalProvider>\n)\n\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default PageLayout\n"],"sourceRoot":""}